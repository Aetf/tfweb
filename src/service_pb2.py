# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tensorflow.core.framework import tensor_pb2 as tensorflow_dot_core_dot_framework_dot_tensor__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='service.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\rservice.proto\x1a&tensorflow/core/framework/tensor.proto\"\x8a\x01\n\nModelQuery\x12\x0e\n\x06method\x18\x01 \x01(\t\x12%\n\x05query\x18\x02 \x03(\x0b\x32\x16.ModelQuery.QueryEntry\x1a\x45\n\nQueryEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.tensorflow.TensorProto:\x02\x38\x01\"\x8f\x01\n\x0bModelResult\x12\x0e\n\x06status\x18\x01 \x01(\t\x12(\n\x06result\x18\x02 \x03(\x0b\x32\x18.ModelResult.ResultEntry\x1a\x46\n\x0bResultEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.tensorflow.TensorProto:\x02\x38\x01\x32+\n\x05Model\x12\"\n\x05Infer\x12\x0b.ModelQuery\x1a\x0c.ModelResultb\x06proto3')
  ,
  dependencies=[tensorflow_dot_core_dot_framework_dot_tensor__pb2.DESCRIPTOR,])




_MODELQUERY_QUERYENTRY = _descriptor.Descriptor(
  name='QueryEntry',
  full_name='ModelQuery.QueryEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ModelQuery.QueryEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ModelQuery.QueryEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=127,
  serialized_end=196,
)

_MODELQUERY = _descriptor.Descriptor(
  name='ModelQuery',
  full_name='ModelQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='method', full_name='ModelQuery.method', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='query', full_name='ModelQuery.query', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MODELQUERY_QUERYENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=196,
)


_MODELRESULT_RESULTENTRY = _descriptor.Descriptor(
  name='ResultEntry',
  full_name='ModelResult.ResultEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ModelResult.ResultEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='ModelResult.ResultEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=272,
  serialized_end=342,
)

_MODELRESULT = _descriptor.Descriptor(
  name='ModelResult',
  full_name='ModelResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ModelResult.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='result', full_name='ModelResult.result', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_MODELRESULT_RESULTENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=199,
  serialized_end=342,
)

_MODELQUERY_QUERYENTRY.fields_by_name['value'].message_type = tensorflow_dot_core_dot_framework_dot_tensor__pb2._TENSORPROTO
_MODELQUERY_QUERYENTRY.containing_type = _MODELQUERY
_MODELQUERY.fields_by_name['query'].message_type = _MODELQUERY_QUERYENTRY
_MODELRESULT_RESULTENTRY.fields_by_name['value'].message_type = tensorflow_dot_core_dot_framework_dot_tensor__pb2._TENSORPROTO
_MODELRESULT_RESULTENTRY.containing_type = _MODELRESULT
_MODELRESULT.fields_by_name['result'].message_type = _MODELRESULT_RESULTENTRY
DESCRIPTOR.message_types_by_name['ModelQuery'] = _MODELQUERY
DESCRIPTOR.message_types_by_name['ModelResult'] = _MODELRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ModelQuery = _reflection.GeneratedProtocolMessageType('ModelQuery', (_message.Message,), dict(

  QueryEntry = _reflection.GeneratedProtocolMessageType('QueryEntry', (_message.Message,), dict(
    DESCRIPTOR = _MODELQUERY_QUERYENTRY,
    __module__ = 'service_pb2'
    # @@protoc_insertion_point(class_scope:ModelQuery.QueryEntry)
    ))
  ,
  DESCRIPTOR = _MODELQUERY,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:ModelQuery)
  ))
_sym_db.RegisterMessage(ModelQuery)
_sym_db.RegisterMessage(ModelQuery.QueryEntry)

ModelResult = _reflection.GeneratedProtocolMessageType('ModelResult', (_message.Message,), dict(

  ResultEntry = _reflection.GeneratedProtocolMessageType('ResultEntry', (_message.Message,), dict(
    DESCRIPTOR = _MODELRESULT_RESULTENTRY,
    __module__ = 'service_pb2'
    # @@protoc_insertion_point(class_scope:ModelResult.ResultEntry)
    ))
  ,
  DESCRIPTOR = _MODELRESULT,
  __module__ = 'service_pb2'
  # @@protoc_insertion_point(class_scope:ModelResult)
  ))
_sym_db.RegisterMessage(ModelResult)
_sym_db.RegisterMessage(ModelResult.ResultEntry)


_MODELQUERY_QUERYENTRY.has_options = True
_MODELQUERY_QUERYENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_MODELRESULT_RESULTENTRY.has_options = True
_MODELRESULT_RESULTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))

_MODEL = _descriptor.ServiceDescriptor(
  name='Model',
  full_name='Model',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=344,
  serialized_end=387,
  methods=[
  _descriptor.MethodDescriptor(
    name='Infer',
    full_name='Model.Infer',
    index=0,
    containing_service=None,
    input_type=_MODELQUERY,
    output_type=_MODELRESULT,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MODEL)

DESCRIPTOR.services_by_name['Model'] = _MODEL

# @@protoc_insertion_point(module_scope)
